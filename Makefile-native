include Files.mk

############ native arch testing:
# You can run this with:
#
# > ./lua.out
#
# However, it's 100% vanilla Lua 5.4.7, that means no FFI just yet,
# But FFI is built into the binary.
# So load it with this line:
#
# > package.loaded.ffi = package.loadlib('lua.out', 'luaopen_ffi')()

CC=clang
O=.o
DIST=lua.out	# because 'lua' is a submodule - name in the dir is already used
CFLAGS+= -O2 -fPIC
LUA_SRCS+= lua/lua.c

# my libffi branch is configured for wasm32 so here I am using the builtin.
LDFLAGS+= -lffi

#CFLAGS+= -DLUA_USE_LINUX
CFLAGS+= -DLUA_USE_MACOSX
#CFLAGS+= -DLUA_USE_IOS
#CFLAGS+= -DLUA_USE_WINDOWS

# Same in both, maybe I'll consolidate:

.PHONY: all
all: $(DIST)

.PHONY: clean
clean:
	-rm $(DIST_OBJS) $(DIST)

luaffifb/%.o: luaffifb/%.c
	$(CC) $(CFLAGS) $(LUAFFIFB_CFLAGS) -c -o $@ $^

lua/%.o: lua/%.c
	$(CC) $(CFLAGS) $(LUA_CFLAGS) -c -o $@ $^

%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $^

$(DIST): $(DIST_OBJS)
	$(CC) $(LDFLAGS) -o $@ $^

.PHONY: distclean
distclean:
	-rm $(DIST)
